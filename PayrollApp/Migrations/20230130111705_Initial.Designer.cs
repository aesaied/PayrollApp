// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayrollApp.Data;

#nullable disable

namespace PayrollApp.Migrations
{
    [DbContext(typeof(PayrollDbContext))]
    [Migration("20230130111705_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PayrollApp.Data.Allowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DefaultAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Allowances");
                });

            modelBuilder.Entity("PayrollApp.Data.Deduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DefaultAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Deductions");
                });

            modelBuilder.Entity("PayrollApp.Data.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PayrollApp.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmpNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FullName")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(max)")
                        .HasComputedColumnSql("FirstName + ' ' + SecondName + ' ' + ThirdName +' '+ LastName");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IDNo")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ThirdName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmpNo");

                    b.HasAlternateKey("IDNo");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeAllowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllowanceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasAlternateKey("AllowanceId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeAllowances");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeDeduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DeductionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasAlternateKey("DeductionId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeDeductions");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AllowanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BasicSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("NetAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18,2)")
                        .HasComputedColumnSql("BasicSalary +  AllowanceAmount - DeductionAmount");

                    b.Property<int>("PayrollId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PayrollId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePayrolls");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayrollAllowance", b =>
                {
                    b.Property<int>("EmployeeAllowanceId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeePayrollId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeAllowanceId", "EmployeePayrollId");

                    b.HasIndex("EmployeePayrollId");

                    b.ToTable("EmployeePayrollAllowances");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayrollDeduction", b =>
                {
                    b.Property<int>("EmployeeDeductionId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeePayrollId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeDeductionId", "EmployeePayrollId");

                    b.HasIndex("EmployeePayrollId");

                    b.ToTable("EmployeePayrollDeductions");
                });

            modelBuilder.Entity("PayrollApp.Data.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("PayrollApp.Data.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("PayrollApp.Data.Employee", b =>
                {
                    b.HasOne("PayrollApp.Data.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeAllowance", b =>
                {
                    b.HasOne("PayrollApp.Data.Allowance", "Allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.Employee", "Employee")
                        .WithMany("Allowances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allowance");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeDeduction", b =>
                {
                    b.HasOne("PayrollApp.Data.Deduction", "Deduction")
                        .WithMany()
                        .HasForeignKey("DeductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.Employee", "Employee")
                        .WithMany("Deductions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deduction");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayroll", b =>
                {
                    b.HasOne("PayrollApp.Data.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.Payroll", "Payroll")
                        .WithMany()
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Payroll");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayrollAllowance", b =>
                {
                    b.HasOne("PayrollApp.Data.EmployeeAllowance", "EmployeeAllowance")
                        .WithMany("PayrollAllowances")
                        .HasForeignKey("EmployeeAllowanceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.EmployeePayroll", "EmployeePayroll")
                        .WithMany("PayrollAllowances")
                        .HasForeignKey("EmployeePayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeAllowance");

                    b.Navigation("EmployeePayroll");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayrollDeduction", b =>
                {
                    b.HasOne("PayrollApp.Data.EmployeeDeduction", "EmployeeDeduction")
                        .WithMany("PayrollDeductions")
                        .HasForeignKey("EmployeeDeductionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PayrollApp.Data.EmployeePayroll", "EmployeePayroll")
                        .WithMany("PayrollDeductions")
                        .HasForeignKey("EmployeePayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeDeduction");

                    b.Navigation("EmployeePayroll");
                });

            modelBuilder.Entity("PayrollApp.Data.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PayrollApp.Data.Employee", b =>
                {
                    b.Navigation("Allowances");

                    b.Navigation("Deductions");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeAllowance", b =>
                {
                    b.Navigation("PayrollAllowances");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeeDeduction", b =>
                {
                    b.Navigation("PayrollDeductions");
                });

            modelBuilder.Entity("PayrollApp.Data.EmployeePayroll", b =>
                {
                    b.Navigation("PayrollAllowances");

                    b.Navigation("PayrollDeductions");
                });

            modelBuilder.Entity("PayrollApp.Data.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
